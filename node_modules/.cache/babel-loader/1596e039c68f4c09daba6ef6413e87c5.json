{"ast":null,"code":"var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(eachFunc, fromRight) {\n  return function (collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/createFind.js"],"names":["baseCallback","require","baseFind","baseFindIndex","isArray","createFind","eachFunc","fromRight","collection","predicate","thisArg","index","undefined","module","exports"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CADtB;AAAA,IAEIE,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAF3B;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAHrB;AAKA;;;;;;;;;;AAQA,SAASI,UAAT,CAAoBC,QAApB,EAA8BC,SAA9B,EAAyC;AACvC,SAAO,UAASC,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyC;AAC9CD,IAAAA,SAAS,GAAGT,YAAY,CAACS,SAAD,EAAYC,OAAZ,EAAqB,CAArB,CAAxB;;AACA,QAAIN,OAAO,CAACI,UAAD,CAAX,EAAyB;AACvB,UAAIG,KAAK,GAAGR,aAAa,CAACK,UAAD,EAAaC,SAAb,EAAwBF,SAAxB,CAAzB;AACA,aAAOI,KAAK,GAAG,CAAC,CAAT,GAAaH,UAAU,CAACG,KAAD,CAAvB,GAAiCC,SAAxC;AACD;;AACD,WAAOV,QAAQ,CAACM,UAAD,EAAaC,SAAb,EAAwBH,QAAxB,CAAf;AACD,GAPD;AAQD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,UAAjB","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n"]},"metadata":{},"sourceType":"script"}