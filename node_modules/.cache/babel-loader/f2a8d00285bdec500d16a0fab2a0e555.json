{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addFocusListener;\n/**\n * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\n * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\n *\n * We only allow one Listener at a time to avoid stack overflows\n */\n\nfunction addFocusListener(handler) {\n  var useFocusin = !document.addEventListener;\n  var remove = void 0;\n\n  if (useFocusin) {\n    document.attachEvent('onfocusin', handler);\n\n    remove = function remove() {\n      return document.detachEvent('onfocusin', handler);\n    };\n  } else {\n    document.addEventListener('focus', handler, true);\n\n    remove = function remove() {\n      return document.removeEventListener('focus', handler, true);\n    };\n  }\n\n  return {\n    remove: remove\n  };\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/react-overlays/lib/utils/addFocusListener.js"],"names":["Object","defineProperty","exports","value","default","addFocusListener","handler","useFocusin","document","addEventListener","remove","attachEvent","detachEvent","removeEventListener","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;AACA;;;;;;;AAMA,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,MAAIC,UAAU,GAAG,CAACC,QAAQ,CAACC,gBAA3B;AACA,MAAIC,MAAM,GAAG,KAAK,CAAlB;;AAEA,MAAIH,UAAJ,EAAgB;AACdC,IAAAA,QAAQ,CAACG,WAAT,CAAqB,WAArB,EAAkCL,OAAlC;;AACAI,IAAAA,MAAM,GAAG,SAASA,MAAT,GAAkB;AACzB,aAAOF,QAAQ,CAACI,WAAT,CAAqB,WAArB,EAAkCN,OAAlC,CAAP;AACD,KAFD;AAGD,GALD,MAKO;AACLE,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCH,OAAnC,EAA4C,IAA5C;;AACAI,IAAAA,MAAM,GAAG,SAASA,MAAT,GAAkB;AACzB,aAAOF,QAAQ,CAACK,mBAAT,CAA6B,OAA7B,EAAsCP,OAAtC,EAA+C,IAA/C,CAAP;AACD,KAFD;AAGD;;AAED,SAAO;AAAEI,IAAAA,MAAM,EAAEA;AAAV,GAAP;AACD;;AACDI,MAAM,CAACZ,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addFocusListener;\n/**\n * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\n * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\n *\n * We only allow one Listener at a time to avoid stack overflows\n */\nfunction addFocusListener(handler) {\n  var useFocusin = !document.addEventListener;\n  var remove = void 0;\n\n  if (useFocusin) {\n    document.attachEvent('onfocusin', handler);\n    remove = function remove() {\n      return document.detachEvent('onfocusin', handler);\n    };\n  } else {\n    document.addEventListener('focus', handler, true);\n    remove = function remove() {\n      return document.removeEventListener('focus', handler, true);\n    };\n  }\n\n  return { remove: remove };\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}