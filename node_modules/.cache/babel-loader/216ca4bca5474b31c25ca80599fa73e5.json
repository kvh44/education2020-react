{"ast":null,"code":"var isArray = require('../lang/isArray'),\n    toObject = require('./toObject');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  var type = typeof value;\n\n  if (type == 'string' && reIsPlainProp.test(value) || type == 'number') {\n    return true;\n  }\n\n  if (isArray(value)) {\n    return false;\n  }\n\n  var result = !reIsDeepProp.test(value);\n  return result || object != null && value in toObject(object);\n}\n\nmodule.exports = isKey;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/isKey.js"],"names":["isArray","require","toObject","reIsDeepProp","reIsPlainProp","isKey","value","object","type","test","result","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAArB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CADtB;AAGA;;;AACA,IAAIE,YAAY,GAAG,oDAAnB;AAAA,IACIC,aAAa,GAAG,OADpB;AAGA;;;;;;;;;AAQA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA8B;AAC5B,MAAIC,IAAI,GAAG,OAAOF,KAAlB;;AACA,MAAKE,IAAI,IAAI,QAAR,IAAoBJ,aAAa,CAACK,IAAd,CAAmBH,KAAnB,CAArB,IAAmDE,IAAI,IAAI,QAA/D,EAAyE;AACvE,WAAO,IAAP;AACD;;AACD,MAAIR,OAAO,CAACM,KAAD,CAAX,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,MAAII,MAAM,GAAG,CAACP,YAAY,CAACM,IAAb,CAAkBH,KAAlB,CAAd;AACA,SAAOI,MAAM,IAAKH,MAAM,IAAI,IAAV,IAAkBD,KAAK,IAAIJ,QAAQ,CAACK,MAAD,CAArD;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,KAAjB","sourcesContent":["var isArray = require('../lang/isArray'),\n    toObject = require('./toObject');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n"]},"metadata":{},"sourceType":"script"}