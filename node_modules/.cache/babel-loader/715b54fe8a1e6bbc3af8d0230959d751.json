{"ast":null,"code":"var isObject = require('../lang/isObject'),\n    isString = require('../lang/isString'),\n    support = require('../support');\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\n\n\nfunction toObject(value) {\n  if (support.unindexedChars && isString(value)) {\n    var index = -1,\n        length = value.length,\n        result = Object(value);\n\n    while (++index < length) {\n      result[index] = value.charAt(index);\n    }\n\n    return result;\n  }\n\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/toObject.js"],"names":["isObject","require","isString","support","toObject","value","unindexedChars","index","length","result","Object","charAt","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAtB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CADtB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,YAAD,CAFrB;AAIA;;;;;;;;;AAOA,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIF,OAAO,CAACG,cAAR,IAA0BJ,QAAQ,CAACG,KAAD,CAAtC,EAA+C;AAC7C,QAAIE,KAAK,GAAG,CAAC,CAAb;AAAA,QACIC,MAAM,GAAGH,KAAK,CAACG,MADnB;AAAA,QAEIC,MAAM,GAAGC,MAAM,CAACL,KAAD,CAFnB;;AAIA,WAAO,EAAEE,KAAF,GAAUC,MAAjB,EAAyB;AACvBC,MAAAA,MAAM,CAACF,KAAD,CAAN,GAAgBF,KAAK,CAACM,MAAN,CAAaJ,KAAb,CAAhB;AACD;;AACD,WAAOE,MAAP;AACD;;AACD,SAAOT,QAAQ,CAACK,KAAD,CAAR,GAAkBA,KAAlB,GAA0BK,MAAM,CAACL,KAAD,CAAvC;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,QAAjB","sourcesContent":["var isObject = require('../lang/isObject'),\n    isString = require('../lang/isString'),\n    support = require('../support');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  if (support.unindexedChars && isString(value)) {\n    var index = -1,\n        length = value.length,\n        result = Object(value);\n\n    while (++index < length) {\n      result[index] = value.charAt(index);\n    }\n    return result;\n  }\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n"]},"metadata":{},"sourceType":"script"}