{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n/**\n * Maps children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapValidComponents(children, func, context) {\n  var index = 0;\n  return _react2['default'].Children.map(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      var lastIndex = index;\n      index++;\n      return func.call(context, child, lastIndex);\n    }\n\n    return child;\n  });\n}\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachValidComponents(children, func, context) {\n  var index = 0;\n  return _react2['default'].Children.forEach(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      func.call(context, child, index);\n      index++;\n    }\n  });\n}\n/**\n * Count the number of \"valid components\" in the Children container.\n *\n * @param {?*} children Children tree container.\n * @returns {number}\n */\n\n\nfunction numberOfValidComponents(children) {\n  var count = 0;\n\n  _react2['default'].Children.forEach(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      count++;\n    }\n  });\n\n  return count;\n}\n/**\n * Determine if the Child container has one or more \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @returns {boolean}\n */\n\n\nfunction hasValidComponent(children) {\n  var hasValid = false;\n\n  _react2['default'].Children.forEach(children, function (child) {\n    if (!hasValid && _react2['default'].isValidElement(child)) {\n      hasValid = true;\n    }\n  });\n\n  return hasValid;\n}\n\nfunction find(children, finder) {\n  var child = undefined;\n  forEachValidComponents(children, function (c, idx) {\n    if (!child && finder(c, idx, children)) {\n      child = c;\n    }\n  });\n  return child;\n}\n/**\n * Finds children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} findFunc.\n * @param {*} findContext Context for findContext.\n * @returns {array} of children that meet the findFunc return statement\n */\n\n\nfunction findValidComponents(children, func, context) {\n  var index = 0;\n  var returnChildren = [];\n\n  _react2['default'].Children.forEach(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      if (func.call(context, child, index)) {\n        returnChildren.push(child);\n      }\n\n      index++;\n    }\n  });\n\n  return returnChildren;\n}\n\nexports['default'] = {\n  map: mapValidComponents,\n  forEach: forEachValidComponents,\n  numberOf: numberOfValidComponents,\n  find: find,\n  findValidComponents: findValidComponents,\n  hasValidComponent: hasValidComponent\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/react-bootstrap/lib/utils/ValidComponentChildren.js"],"names":["_interopRequireDefault","require","exports","__esModule","_react","_react2","mapValidComponents","children","func","context","index","Children","map","child","isValidElement","lastIndex","call","forEachValidComponents","forEach","numberOfValidComponents","count","hasValidComponent","hasValid","find","finder","undefined","c","idx","findValidComponents","returnChildren","push","numberOf","module"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\n/**\n * Maps children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapValidComponents(children, func, context) {\n  var index = 0;\n\n  return _react2['default'].Children.map(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      var lastIndex = index;\n      index++;\n      return func.call(context, child, lastIndex);\n    }\n\n    return child;\n  });\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachValidComponents(children, func, context) {\n  var index = 0;\n\n  return _react2['default'].Children.forEach(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      func.call(context, child, index);\n      index++;\n    }\n  });\n}\n\n/**\n * Count the number of \"valid components\" in the Children container.\n *\n * @param {?*} children Children tree container.\n * @returns {number}\n */\nfunction numberOfValidComponents(children) {\n  var count = 0;\n\n  _react2['default'].Children.forEach(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      count++;\n    }\n  });\n\n  return count;\n}\n\n/**\n * Determine if the Child container has one or more \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @returns {boolean}\n */\nfunction hasValidComponent(children) {\n  var hasValid = false;\n\n  _react2['default'].Children.forEach(children, function (child) {\n    if (!hasValid && _react2['default'].isValidElement(child)) {\n      hasValid = true;\n    }\n  });\n\n  return hasValid;\n}\n\nfunction find(children, finder) {\n  var child = undefined;\n\n  forEachValidComponents(children, function (c, idx) {\n    if (!child && finder(c, idx, children)) {\n      child = c;\n    }\n  });\n\n  return child;\n}\n\n/**\n * Finds children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} findFunc.\n * @param {*} findContext Context for findContext.\n * @returns {array} of children that meet the findFunc return statement\n */\nfunction findValidComponents(children, func, context) {\n  var index = 0;\n  var returnChildren = [];\n\n  _react2['default'].Children.forEach(children, function (child) {\n    if (_react2['default'].isValidElement(child)) {\n      if (func.call(context, child, index)) {\n        returnChildren.push(child);\n      }\n      index++;\n    }\n  });\n\n  return returnChildren;\n}\n\nexports['default'] = {\n  map: mapValidComponents,\n  forEach: forEachValidComponents,\n  numberOf: numberOfValidComponents,\n  find: find,\n  findValidComponents: findValidComponents,\n  hasValidComponent: hasValidComponent\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}