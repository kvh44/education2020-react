{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _common = require('./common');\n/**\n * Checks whether a prop provides a type of element.\n *\n * The type of element can be provided in two forms:\n * - tag name (string)\n * - a return value of React.createClass(...)\n *\n * @param props\n * @param propName\n * @param componentName\n * @returns {Error|undefined}\n */\n\n\nfunction validate(props, propName, componentName) {\n  var errBeginning = _common.errMsg(props, propName, componentName, '. Expected an Element `type`');\n\n  if (typeof props[propName] !== 'function') {\n    if (_react2['default'].isValidElement(props[propName])) {\n      return new Error(errBeginning + ', not an actual Element');\n    }\n\n    if (typeof props[propName] !== 'string') {\n      return new Error(errBeginning + ' such as a tag name or return value of React.createClass(...)');\n    }\n  }\n}\n\nexports['default'] = _common.createChainableTypeChecker(validate);\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/react-prop-types/lib/elementType.js"],"names":["exports","__esModule","_interopRequireDefault","obj","_react","require","_react2","_common","validate","props","propName","componentName","errBeginning","errMsg","isValidElement","Error","createChainableTypeChecker","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACF,UAAX,GAAwBE,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGJ,sBAAsB,CAACE,MAAD,CAApC;;AAEA,IAAIG,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;AAEA;;;;;;;;;;;;;;AAaA,SAASG,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAAkD;AAChD,MAAIC,YAAY,GAAGL,OAAO,CAACM,MAAR,CAAeJ,KAAf,EAAsBC,QAAtB,EAAgCC,aAAhC,EAA+C,8BAA/C,CAAnB;;AAEA,MAAI,OAAOF,KAAK,CAACC,QAAD,CAAZ,KAA2B,UAA/B,EAA2C;AACzC,QAAIJ,OAAO,CAAC,SAAD,CAAP,CAAmBQ,cAAnB,CAAkCL,KAAK,CAACC,QAAD,CAAvC,CAAJ,EAAwD;AACtD,aAAO,IAAIK,KAAJ,CAAUH,YAAY,GAAG,yBAAzB,CAAP;AACD;;AAED,QAAI,OAAOH,KAAK,CAACC,QAAD,CAAZ,KAA2B,QAA/B,EAAyC;AACvC,aAAO,IAAIK,KAAJ,CAAUH,YAAY,GAAG,+DAAzB,CAAP;AACD;AACF;AACF;;AAEDZ,OAAO,CAAC,SAAD,CAAP,GAAqBO,OAAO,CAACS,0BAAR,CAAmCR,QAAnC,CAArB;AACAS,MAAM,CAACjB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _common = require('./common');\n\n/**\n * Checks whether a prop provides a type of element.\n *\n * The type of element can be provided in two forms:\n * - tag name (string)\n * - a return value of React.createClass(...)\n *\n * @param props\n * @param propName\n * @param componentName\n * @returns {Error|undefined}\n */\n\nfunction validate(props, propName, componentName) {\n  var errBeginning = _common.errMsg(props, propName, componentName, '. Expected an Element `type`');\n\n  if (typeof props[propName] !== 'function') {\n    if (_react2['default'].isValidElement(props[propName])) {\n      return new Error(errBeginning + ', not an actual Element');\n    }\n\n    if (typeof props[propName] !== 'string') {\n      return new Error(errBeginning + ' such as a tag name or return value of React.createClass(...)');\n    }\n  }\n}\n\nexports['default'] = _common.createChainableTypeChecker(validate);\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}