{"ast":null,"code":"var arrayPush = require('./arrayPush'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\n\n\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseFlatten;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/baseFlatten.js"],"names":["arrayPush","require","isArguments","isArray","isArrayLike","isObjectLike","baseFlatten","array","isDeep","isStrict","result","index","length","value","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,qBAAD,CADzB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAFrB;AAAA,IAGIG,WAAW,GAAGH,OAAO,CAAC,eAAD,CAHzB;AAAA,IAIII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAJ1B;AAMA;;;;;;;;;;;;;AAWA,SAASK,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,MAA9C,EAAsD;AACpDA,EAAAA,MAAM,KAAKA,MAAM,GAAG,EAAd,CAAN;AAEA,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGL,KAAK,CAACK,MADnB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIC,KAAK,GAAGN,KAAK,CAACI,KAAD,CAAjB;;AACA,QAAIN,YAAY,CAACQ,KAAD,CAAZ,IAAuBT,WAAW,CAACS,KAAD,CAAlC,KACCJ,QAAQ,IAAIN,OAAO,CAACU,KAAD,CAAnB,IAA8BX,WAAW,CAACW,KAAD,CAD1C,CAAJ,EACwD;AACtD,UAAIL,MAAJ,EAAY;AACV;AACAF,QAAAA,WAAW,CAACO,KAAD,EAAQL,MAAR,EAAgBC,QAAhB,EAA0BC,MAA1B,CAAX;AACD,OAHD,MAGO;AACLV,QAAAA,SAAS,CAACU,MAAD,EAASG,KAAT,CAAT;AACD;AACF,KARD,MAQO,IAAI,CAACJ,QAAL,EAAe;AACpBC,MAAAA,MAAM,CAACA,MAAM,CAACE,MAAR,CAAN,GAAwBC,KAAxB;AACD;AACF;;AACD,SAAOH,MAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["var arrayPush = require('./arrayPush'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    if (isObjectLike(value) && isArrayLike(value) &&\n        (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n"]},"metadata":{},"sourceType":"script"}