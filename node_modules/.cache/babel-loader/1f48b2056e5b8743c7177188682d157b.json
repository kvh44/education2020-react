{"ast":null,"code":"var _jsxFileName = \"/Users/renard/education2020-react/src/views/bo/school/SchoolForm.jsx\";\nimport React from 'react';\nimport validate from '../../../common/validation/validate';\nimport * as APIConfig from '../../../config/APIConfig';\nimport FetchRegionListService from '../../../common/data/FetchRegionListService';\nimport FetchDepartmentListService from '../../../common/data/FetchDepartmentListService';\nimport FetchCityListService from '../../../common/data/FetchCityListService';\nimport ListRegion from './ListRegion';\nimport ListDepartment from './ListDepartment';\n\nclass SchoolForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formSubmitHandler = () => {\n      const formData = {};\n\n      for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n      }\n    };\n\n    this.fetchRegionListService = new FetchRegionListService();\n    this.fetchDepartmentListService = new FetchDepartmentListService();\n    this.fetchCityListService = new FetchCityListService();\n    this.optionsRegionRef = React.createRef();\n    this.optionsDepartmentRef = React.createRef();\n    this.state = {\n      formIsValid: false,\n      optionsRegion: [],\n      optionsDepartment: [],\n      optionsCity: [],\n      formControls: {\n        schoolName: {\n          value: '',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3\n          }\n        },\n        address: {\n          value: '',\n          validationRules: {\n            minLength: 3\n          }\n        },\n        zipCode: {\n          value: '',\n          validationRules: {\n            minLength: 5\n          }\n        },\n        description: {\n          value: ''\n        },\n        selectedRegion: {\n          value: '11',\n          validationRules: {\n            minLength: 1\n          }\n        },\n        selectedDepartment: {\n          value: '75',\n          validationRules: {\n            minLength: 1\n          }\n        },\n        selectedCity: {\n          value: '75013',\n          validationRules: {\n            minLength: 1\n          }\n        }\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.saveSchoolForm = this.saveSchoolForm.bind(this);\n  }\n\n  componentDidMount() {}\n\n  async fetchRegionList() {\n    this.fetchRegionListService.fetchRegionList().then(json => {\n      this.setState({\n        optionsRegion: json\n      });\n      this.optionsRegionRef.current.focusList();\n\n      if (this.state.formControls.selectedRegion.value) {\n        this.fetchDepartmentList(this.state.formControls.selectedRegion.value);\n      }\n    });\n  }\n\n  async fetchDepartmentList(regionCode) {\n    this.setState({\n      optionsDepartment: [],\n      optionsCity: []\n    });\n    this.fetchDepartmentListService.fetchDepartmentList(regionCode).then(json => {\n      this.setState({\n        optionsDepartment: json\n      });\n\n      if (this.state.formControls.selectedDepartment.value) {\n        this.fetchCityList(this.state.formControls.selectedDepartment.value);\n      } //console.log(this.state.formControls.selectedDepartment.value);\n\n    });\n  }\n\n  async fetchCityList(departmentCode) {\n    this.setState({\n      optionsCity: []\n    });\n    this.fetchCityListService.fetchCityList(departmentCode).then(json => {\n      this.setState({\n        optionsCity: json\n      }); //console.log(this.state.formControls.selectedCity.value);\n    });\n  }\n\n  async componentDidMount() {\n    this.fetchRegionList();\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const updatedControls = { ...this.state.formControls\n    };\n    const updatedFormElement = { ...updatedControls[name]\n    };\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n    updatedControls[name] = updatedFormElement;\n    let formIsValid = true;\n\n    for (let inputIdentifier in updatedControls) {\n      if (typeof updatedControls[inputIdentifier] != 'undefined') {\n        formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n      }\n    } //console.log(name);\n\n\n    if (name == 'selectedRegion') {\n      updatedControls['selectedDepartment'].value = '';\n      updatedControls['selectedCity'].value = '';\n      this.fetchDepartmentList(value);\n    }\n\n    if (name == 'selectedDepartment') {\n      updatedControls['selectedCity'].value = '';\n      this.fetchCityList(value);\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      formIsValid: formIsValid\n    });\n  }\n\n  saveSchoolForm(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper wrapper-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ibox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ibox-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"School form\"))), React.createElement(\"div\", {\n      className: \"ibox-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(ListRegion, {\n      selectedRegion: this.state.formControls.selectedRegion.value,\n      handleInputChange: this.handleInputChange,\n      disabled: this.state.optionsRegion.length == 0,\n      ref: this.optionsRegionRef,\n      optionsRegion: this.state.optionsRegion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(ListDepartment, {\n      selectedDepartment: this.state.formControls.selectedDepartment.value,\n      handleInputChange: this.handleInputChange,\n      disabled: this.state.optionsDepartment.length == 0,\n      ref: this.optionsDepartmentRef,\n      optionsDepartment: this.state.optionsDepartment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control m-b\",\n      name: \"selectedCity\",\n      value: this.state.formControls.selectedCity.value,\n      onChange: this.handleInputChange,\n      disabled: this.state.optionsCity.length == 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Select City\"), this.state.optionsCity.map(option => React.createElement(\"option\", {\n      value: option.zipCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, option.name, \" (\", option.zipCode, \")\"))))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.formControls.schoolName.touched && !this.state.formControls.schoolName.valid ? \"form-group row has-error\" : \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Nom \\xE9cole\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"schoolName\",\n      value: this.state.formControls.schoolName.value,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Adresse\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"address\",\n      value: this.state.formControls.address.value,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Code postale\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"zipCode\",\n      value: this.state.formControls.zipCode.value,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"description\",\n      rows: \"3\",\n      placeholder: \"Enter a description ...\",\n      name: \"description\",\n      onChange: this.handleInputChange,\n      value: this.state.formControls.description.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12 col-sm-offset-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-e-margins\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-lg btn-white\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary\",\n      type: \"button\",\n      disabled: !this.state.formIsValid,\n      onClick: this.saveSchoolForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Save\"))))))))));\n  }\n\n}\n\nexport default SchoolForm;","map":{"version":3,"sources":["/Users/renard/education2020-react/src/views/bo/school/SchoolForm.jsx"],"names":["React","validate","APIConfig","FetchRegionListService","FetchDepartmentListService","FetchCityListService","ListRegion","ListDepartment","SchoolForm","Component","constructor","props","formSubmitHandler","formData","formElementId","state","formControls","value","fetchRegionListService","fetchDepartmentListService","fetchCityListService","optionsRegionRef","createRef","optionsDepartmentRef","formIsValid","optionsRegion","optionsDepartment","optionsCity","schoolName","valid","touched","validationRules","minLength","address","zipCode","description","selectedRegion","selectedDepartment","selectedCity","handleInputChange","bind","saveSchoolForm","componentDidMount","fetchRegionList","then","json","setState","current","focusList","fetchDepartmentList","regionCode","fetchCityList","departmentCode","event","target","type","checked","name","updatedControls","updatedFormElement","inputIdentifier","e","preventDefault","render","length","map","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,2BAA3B;AACA,OAAOC,sBAAP,MAAmC,6CAAnC;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,oBAAP,MAAiC,2CAAjC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsKnBC,iBAtKmB,GAsKC,MAAM;AACzB,YAAMC,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAIC,aAAT,IAA0B,KAAKC,KAAL,CAAWC,YAArC,EAAmD;AAC/CH,QAAAA,QAAQ,CAACC,aAAD,CAAR,GAA0B,KAAKC,KAAL,CAAWC,YAAX,CAAwBF,aAAxB,EAAuCG,KAAjE;AACH;AACD,KA3KkB;;AAEf,SAAKC,sBAAL,GAA8B,IAAIf,sBAAJ,EAA9B;AACA,SAAKgB,0BAAL,GAAkC,IAAIf,0BAAJ,EAAlC;AACA,SAAKgB,oBAAL,GAA4B,IAAIf,oBAAJ,EAA5B;AAEA,SAAKgB,gBAAL,GAAwBrB,KAAK,CAACsB,SAAN,EAAxB;AACA,SAAKC,oBAAL,GAA4BvB,KAAK,CAACsB,SAAN,EAA5B;AAEA,SAAKP,KAAL,GAAa;AACTS,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,aAAa,EAAE,EAFN;AAITC,MAAAA,iBAAiB,EAAE,EAJV;AAMTC,MAAAA,WAAW,EAAE,EANJ;AAQTX,MAAAA,YAAY,EAAE;AACVY,QAAAA,UAAU,EAAG;AACTX,UAAAA,KAAK,EAAE,EADE;AAETY,UAAAA,KAAK,EAAE,KAFE;AAGTC,UAAAA,OAAO,EAAE,KAHA;AAITC,UAAAA,eAAe,EAAE;AACdC,YAAAA,SAAS,EAAE;AADG;AAJR,SADH;AASVC,QAAAA,OAAO,EAAE;AACJhB,UAAAA,KAAK,EAAE,EADH;AAEJc,UAAAA,eAAe,EAAE;AACdC,YAAAA,SAAS,EAAE;AADG;AAFb,SATC;AAeVE,QAAAA,OAAO,EAAE;AACJjB,UAAAA,KAAK,EAAE,EADH;AAEJc,UAAAA,eAAe,EAAE;AACbC,YAAAA,SAAS,EAAE;AADE;AAFb,SAfC;AAqBVG,QAAAA,WAAW,EAAE;AACRlB,UAAAA,KAAK,EAAE;AADC,SArBH;AAwBVmB,QAAAA,cAAc,EAAE;AACXnB,UAAAA,KAAK,EAAE,IADI;AAEXc,UAAAA,eAAe,EAAE;AACdC,YAAAA,SAAS,EAAE;AADG;AAFN,SAxBN;AA8BVK,QAAAA,kBAAkB,EAAE;AACfpB,UAAAA,KAAK,EAAE,IADQ;AAEfc,UAAAA,eAAe,EAAE;AACdC,YAAAA,SAAS,EAAE;AADG;AAFF,SA9BV;AAoCVM,QAAAA,YAAY,EAAE;AACTrB,UAAAA,KAAK,EAAE,OADE;AAETc,UAAAA,eAAe,EAAE;AACdC,YAAAA,SAAS,EAAE;AADG;AAFR;AApCJ;AARL,KAAb;AAqDA,SAAKO,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG,CAEnB;;AAGA,QAAMC,eAAN,GAAwB;AACnB,SAAKzB,sBAAL,CAA4ByB,eAA5B,GAA8CC,IAA9C,CAAmDC,IAAI,IAAI;AACjD,WAAKC,QAAL,CAAc;AACPrB,QAAAA,aAAa,EAAEoB;AADR,OAAd;AAIA,WAAKxB,gBAAL,CAAsB0B,OAAtB,CAA8BC,SAA9B;;AAEA,UAAI,KAAKjC,KAAL,CAAWC,YAAX,CAAwBoB,cAAxB,CAAuCnB,KAA3C,EAAmD;AACjD,aAAKgC,mBAAL,CAAyB,KAAKlC,KAAL,CAAWC,YAAX,CAAwBoB,cAAxB,CAAuCnB,KAAhE;AACD;AAEN,KAXL;AAaL;;AAED,QAAMgC,mBAAN,CAA0BC,UAA1B,EAAsC;AAChC,SAAKJ,QAAL,CAAc;AACTpB,MAAAA,iBAAiB,EAAE,EADV;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAd;AAIA,SAAKR,0BAAL,CAAgC8B,mBAAhC,CAAoDC,UAApD,EAAgEN,IAAhE,CAAqEC,IAAI,IAAI;AACxE,WAAKC,QAAL,CAAc;AACPpB,QAAAA,iBAAiB,EAAEmB;AADZ,OAAd;;AAIA,UAAI,KAAK9B,KAAL,CAAWC,YAAX,CAAwBqB,kBAAxB,CAA2CpB,KAA/C,EAAuD;AACnD,aAAKkC,aAAL,CAAmB,KAAKpC,KAAL,CAAWC,YAAX,CAAwBqB,kBAAxB,CAA2CpB,KAA9D;AACH,OAPuE,CASxE;;AACD,KAVJ;AAYL;;AAED,QAAMkC,aAAN,CAAoBC,cAApB,EAAoC;AAC5B,SAAKN,QAAL,CAAc;AACLnB,MAAAA,WAAW,EAAE;AADR,KAAd;AAGA,SAAKP,oBAAL,CAA0B+B,aAA1B,CAAwCC,cAAxC,EAAwDR,IAAxD,CAA6DC,IAAI,IAAI;AAChE,WAAKC,QAAL,CAAc;AACPnB,QAAAA,WAAW,EAAEkB;AADN,OAAd,EADgE,CAKhE;AACD,KANJ;AAQL;;AAEH,QAAMH,iBAAN,GAA0B;AACtB,SAAKC,eAAL;AACH;;AAGDJ,EAAAA,iBAAiB,CAACc,KAAD,EAAQ;AACrB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMrC,KAAK,GAAGqC,MAAM,CAACC,IAAP,KAAgB,UAAhB,GAA6BD,MAAM,CAACE,OAApC,GAA8CF,MAAM,CAACrC,KAAnE;AACA,UAAMwC,IAAI,GAAGH,MAAM,CAACG,IAApB;AAEE,UAAMC,eAAe,GAAG,EACvB,GAAG,KAAK3C,KAAL,CAAWC;AADS,KAAxB;AAGA,UAAM2C,kBAAkB,GAAG,EACvB,GAAGD,eAAe,CAACD,IAAD;AADK,KAA3B;AAGAE,IAAAA,kBAAkB,CAAC1C,KAAnB,GAA2BA,KAA3B;AACA0C,IAAAA,kBAAkB,CAAC7B,OAAnB,GAA6B,IAA7B;AACA6B,IAAAA,kBAAkB,CAAC9B,KAAnB,GAA2B5B,QAAQ,CAACgB,KAAD,EAAQ0C,kBAAkB,CAAC5B,eAA3B,CAAnC;AAEA2B,IAAAA,eAAe,CAACD,IAAD,CAAf,GAAwBE,kBAAxB;AAEA,QAAInC,WAAW,GAAG,IAAlB;;AACA,SAAK,IAAIoC,eAAT,IAA4BF,eAA5B,EAA6C;AACzC,UAAG,OAAOA,eAAe,CAACE,eAAD,CAAtB,IAA2C,WAA9C,EAA2D;AACvDpC,QAAAA,WAAW,GAAGkC,eAAe,CAACE,eAAD,CAAf,CAAiC/B,KAAjC,IAA0CL,WAAxD;AACH;AACJ,KAtBkB,CAwBnB;;;AACA,QAAGiC,IAAI,IAAI,gBAAX,EAA6B;AACzBC,MAAAA,eAAe,CAAC,oBAAD,CAAf,CAAsCzC,KAAtC,GAA8C,EAA9C;AACAyC,MAAAA,eAAe,CAAC,cAAD,CAAf,CAAgCzC,KAAhC,GAAwC,EAAxC;AACA,WAAKgC,mBAAL,CAAyBhC,KAAzB;AACH;;AACD,QAAGwC,IAAI,IAAI,oBAAX,EAAiC;AAC7BC,MAAAA,eAAe,CAAC,cAAD,CAAf,CAAgCzC,KAAhC,GAAwC,EAAxC;AACA,WAAKkC,aAAL,CAAmBlC,KAAnB;AACH;;AAED,SAAK6B,QAAL,CAAc;AACV9B,MAAAA,YAAY,EAAE0C,eADJ;AAEVlC,MAAAA,WAAW,EAAEA;AAFH,KAAd;AAIH;;AAULiB,EAAAA,cAAc,CAACoB,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACD,WACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,cAAc,EAAE,KAAKhD,KAAL,CAAWC,YAAX,CAAwBoB,cAAxB,CAAuCnB,KAD3D;AAEI,MAAA,iBAAiB,EAAE,KAAKsB,iBAF5B;AAGI,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWU,aAAX,CAAyBuC,MAAzB,IAAmC,CAHjD;AAII,MAAA,GAAG,EAAE,KAAK3C,gBAJd;AAKI,MAAA,aAAa,EAAE,KAAKN,KAAL,CAAWU,aAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI,oBAAC,cAAD;AACI,MAAA,kBAAkB,EAAE,KAAKV,KAAL,CAAWC,YAAX,CAAwBqB,kBAAxB,CAA2CpB,KADnE;AAEI,MAAA,iBAAiB,EAAE,KAAKsB,iBAF5B;AAGI,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWW,iBAAX,CAA6BsC,MAA7B,IAAuC,CAHrD;AAII,MAAA,GAAG,EAAE,KAAKzC,oBAJd;AAKI,MAAA,iBAAiB,EAAE,KAAKR,KAAL,CAAWW,iBALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAmBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AACA,MAAA,IAAI,EAAC,cADL;AAEA,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,YAAX,CAAwBsB,YAAxB,CAAqCrB,KAF5C;AAGA,MAAA,QAAQ,EAAE,KAAKsB,iBAHf;AAIA,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWY,WAAX,CAAuBqC,MAAvB,IAAiC,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,EAOK,KAAKjD,KAAL,CAAWY,WAAX,CAAuBsC,GAAvB,CAA2BC,MAAM,IAC9B;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAAChC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgC,MAAM,CAACT,IADV,QACkBS,MAAM,CAAChC,OADzB,MADH,CAPL,CADA,CAFJ,CAnBJ,EAqCI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCJ,EA0CI;AAAK,MAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWC,YAAX,CAAwBY,UAAxB,CAAmCE,OAAnC,IAA8C,CAAC,KAAKf,KAAL,CAAWC,YAAX,CAAwBY,UAAxB,CAAmCC,KAAlF,GAA2F,0BAA3F,GAAwH,gBAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAE,cAA9B;AAA6C,MAAA,IAAI,EAAC,YAAlD;AACA,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,YAAX,CAAwBY,UAAxB,CAAmCX,KAD1C;AAEC,MAAA,QAAQ,EAAE,KAAKsB,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CA1CJ,EAmDI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDJ,EAqDI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC,EACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,SAAjD;AAC3B,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,YAAX,CAAwBiB,OAAxB,CAAgChB,KADZ;AAE1B,MAAA,QAAQ,EAAE,KAAKsB,iBAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CADJ,CArDJ,EA0DI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DJ,EA4DI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAjC,EACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,SAAjD;AAC1B,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,YAAX,CAAwBkB,OAAxB,CAAgCjB,KADb;AAE1B,MAAA,QAAQ,EAAE,KAAKsB,iBAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CADJ,CA5DJ,EAiEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjEJ,EAmEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAO,MAAA,SAAS,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjC,EACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,SAAS,EAAC,cAApB;AAAmC,MAAA,EAAE,EAAC,aAAtC;AAAoD,MAAA,IAAI,EAAC,GAAzD;AAA6D,MAAA,WAAW,EAAC,yBAAzE;AACA,MAAA,IAAI,EAAC,aADL;AACmB,MAAA,QAAQ,EAAE,KAAKA,iBADlC;AAEA,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,YAAX,CAAwBmB,WAAxB,CAAoClB,KAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAnEJ,EA6EI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7EJ,EA+EI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,SAAS,EAAC,sBAAnB;AAA0C,MAAA,IAAI,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,IAAI,EAAC,QAAhD;AAAyD,MAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWS,WAA/E;AAA4F,MAAA,OAAO,EAAE,KAAKiB,cAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,CADJ,CA/EJ,CADJ,CANJ,CADJ,CADJ,CADJ;AAyGP;;AA/RoC;;AAmSzC,eAAejC,UAAf","sourcesContent":["import React from 'react';\nimport validate from '../../../common/validation/validate';\nimport * as APIConfig from '../../../config/APIConfig';\nimport FetchRegionListService from '../../../common/data/FetchRegionListService';\nimport FetchDepartmentListService from '../../../common/data/FetchDepartmentListService';\nimport FetchCityListService from '../../../common/data/FetchCityListService';\n\nimport ListRegion from './ListRegion';\nimport ListDepartment from './ListDepartment';\n\nclass SchoolForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.fetchRegionListService = new FetchRegionListService();\n        this.fetchDepartmentListService = new FetchDepartmentListService();\n        this.fetchCityListService = new FetchCityListService();\n\n        this.optionsRegionRef = React.createRef();\n        this.optionsDepartmentRef = React.createRef();\n\n        this.state = {\n            formIsValid: false,\n            optionsRegion: [\n            ],\n            optionsDepartment: [\n            ],\n            optionsCity: [\n            ],\n            formControls: {\n                schoolName:  {\n                    value: '',\n                    valid: false,\n                    touched: false,\n                    validationRules: {\n                       minLength: 3\n                    }\n                },\n                address: {\n                     value: '',\n                     validationRules: {\n                        minLength: 3\n                     }\n                 },\n                zipCode: {\n                     value: '',\n                     validationRules: {\n                         minLength: 5\n                     }\n                 },\n                description: {\n                     value: ''\n                },\n                selectedRegion: {\n                     value: '11',\n                     validationRules: {\n                        minLength: 1\n                     }\n                },\n                selectedDepartment: {\n                     value: '75',\n                     validationRules: {\n                        minLength: 1\n                     }\n                },\n                selectedCity: {\n                     value: '75013',\n                     validationRules: {\n                        minLength: 1\n                     }\n                }\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.saveSchoolForm = this.saveSchoolForm.bind(this);\n      }\n\n      componentDidMount() {\n\n      }\n\n\n       async fetchRegionList() {\n            this.fetchRegionListService.fetchRegionList().then(json => {\n                      this.setState({\n                             optionsRegion: json\n                      });\n\n                      this.optionsRegionRef.current.focusList();\n\n                      if( this.state.formControls.selectedRegion.value ) {\n                        this.fetchDepartmentList(this.state.formControls.selectedRegion.value);\n                      }\n\n                }\n            );\n      }\n\n      async fetchDepartmentList(regionCode) {\n            this.setState({\n                 optionsDepartment: [],\n                 optionsCity: []\n            });\n            this.fetchDepartmentListService.fetchDepartmentList(regionCode).then(json => {\n                 this.setState({\n                        optionsDepartment: json\n                 });\n\n                 if( this.state.formControls.selectedDepartment.value ) {\n                     this.fetchCityList(this.state.formControls.selectedDepartment.value);\n                 }\n\n                 //console.log(this.state.formControls.selectedDepartment.value);\n               }\n           );\n      }\n\n      async fetchCityList(departmentCode) {\n              this.setState({\n                       optionsCity: []\n              });\n              this.fetchCityListService.fetchCityList(departmentCode).then(json => {\n                   this.setState({\n                          optionsCity: json\n                   });\n\n                   //console.log(this.state.formControls.selectedCity.value);\n                 }\n             );\n        }\n\n      async componentDidMount() {\n          this.fetchRegionList();\n      }\n\n\n      handleInputChange(event) {\n          const target = event.target;\n          const value = target.type === 'checkbox' ? target.checked : target.value;\n          const name = target.name;\n\n            const updatedControls = {\n            \t...this.state.formControls\n            };\n            const updatedFormElement = {\n                ...updatedControls[name]\n            };\n            updatedFormElement.value = value;\n            updatedFormElement.touched = true;\n            updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n            updatedControls[name] = updatedFormElement;\n\n            let formIsValid = true;\n            for (let inputIdentifier in updatedControls) {\n                if(typeof updatedControls[inputIdentifier] != 'undefined') {\n                    formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n                }\n            }\n\n            //console.log(name);\n            if(name == 'selectedRegion') {\n                updatedControls['selectedDepartment'].value = '';\n                updatedControls['selectedCity'].value = '';\n                this.fetchDepartmentList(value);\n            }\n            if(name == 'selectedDepartment') {\n                updatedControls['selectedCity'].value = '';\n                this.fetchCityList(value);\n            }\n\n            this.setState({\n                formControls: updatedControls,\n                formIsValid: formIsValid\n            });\n        }\n\n    formSubmitHandler = () => {\n    \tconst formData = {};\n    \tfor (let formElementId in this.state.formControls) {\n    \t    formData[formElementId] = this.state.formControls[formElementId].value;\n    \t}\n    }\n\n\n    saveSchoolForm(e) {\n        e.preventDefault();\n    }\n\n\n    render() {\n            return (\n                <div className=\"wrapper wrapper-content\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"ibox\">\n                                <div className=\"ibox-title\">\n                                    <h5>School form</h5>\n                                </div>\n                            </div>\n                            <div className=\"ibox-content\">\n                                <form>\n                                    <ListRegion\n                                        selectedRegion={this.state.formControls.selectedRegion.value}\n                                        handleInputChange={this.handleInputChange}\n                                        disabled={this.state.optionsRegion.length == 0}\n                                        ref={this.optionsRegionRef}\n                                        optionsRegion={this.state.optionsRegion}\n                                       />\n\n                                    <ListDepartment\n                                        selectedDepartment={this.state.formControls.selectedDepartment.value}\n                                        handleInputChange={this.handleInputChange}\n                                        disabled={this.state.optionsDepartment.length == 0}\n                                        ref={this.optionsDepartmentRef}\n                                        optionsDepartment={this.state.optionsDepartment}\n                                       />\n\n\n\n                                    <div className=\"form-group row\"><label className=\"col-sm-2 col-form-label\">City</label>\n\n                                        <div className=\"col-sm-10\">\n                                        <select className=\"form-control m-b\"\n                                        name=\"selectedCity\"\n                                        value={this.state.formControls.selectedCity.value}\n                                        onChange={this.handleInputChange}\n                                        disabled={this.state.optionsCity.length == 0}\n                                        >\n                                            <option value=\"\">Select City</option>\n                                            {this.state.optionsCity.map(option => (\n                                                <option value={option.zipCode}>\n                                                  {option.name} ({option.zipCode})\n                                                </option>\n                                              ))}\n                                        </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n\n\n\n                                    <div className={this.state.formControls.schoolName.touched && !this.state.formControls.schoolName.valid ?  \"form-group row has-error\" : \"form-group row\" }>\n                                        <label className=\"col-sm-2 col-form-label\">Nom école</label>\n                                        <div className=\"col-sm-10\">\n                                        <input type=\"text\" className= 'form-control' name=\"schoolName\"\n                                        value={this.state.formControls.schoolName.value}\n                                         onChange={this.handleInputChange}\n                                         />\n                                        </div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group  row\"><label className=\"col-sm-2 col-form-label\">Adresse</label>\n                                        <div className=\"col-sm-10\"><input type=\"text\" className=\"form-control\" name=\"address\"\n                                        value={this.state.formControls.address.value}\n                                         onChange={this.handleInputChange} /></div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group  row\"><label className=\"col-sm-2 col-form-label\">Code postale</label>\n                                        <div className=\"col-sm-10\"><input type=\"text\" className=\"form-control\" name=\"zipCode\"\n                                         value={this.state.formControls.zipCode.value}\n                                         onChange={this.handleInputChange} /></div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group  row\"><label className=\"col-sm-2 col-form-label\">Description</label>\n                                        <div className=\"col-sm-10\">\n                                            <textarea className=\"form-control\" id=\"description\" rows=\"3\" placeholder=\"Enter a description ...\"\n                                            name=\"description\" onChange={this.handleInputChange}\n                                            value={this.state.formControls.description.value}\n                                            >\n\n                                            </textarea>\n                                        </div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group row\">\n                                        <div className=\"col-sm-12 col-sm-offset-2\">\n                                            <div className=\"float-right\">\n                                                <div className=\"float-e-margins\">\n                                                    <button  className=\"btn btn-lg btn-white\" type=\"button\">Cancel</button>\n                                                    <button className=\"btn btn-lg btn-primary\" type=\"button\" disabled={!this.state.formIsValid} onClick={this.saveSchoolForm}>Save</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                         </div>\n                    </div>\n                </div>\n            )\n    }\n\n}\n\nexport default SchoolForm"]},"metadata":{},"sourceType":"module"}