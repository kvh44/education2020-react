{"ast":null,"code":"var _jsxFileName = \"/Users/renard/education2020-react/src/views/bo/school/SchoolForm.jsx\";\nimport React from 'react';\nimport validate from '../../../common/validation/validate';\nimport * as APIConfig from '../../../config/APIConfig';\nimport FetchRegionListService from '../../../common/data/FetchRegionListService';\nimport FetchDepartmentListService from '../../../common/data/FetchDepartmentListService';\nimport FetchCityListService from '../../../common/data/FetchCityListService';\nimport ListRegion from './ListRegion';\nimport ListDepartment from './ListDepartment';\nimport ListCity from './ListCity';\n\nclass SchoolForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formSubmitHandler = () => {\n      const formData = {};\n\n      for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n      }\n    };\n\n    this.fetchRegionListService = new FetchRegionListService();\n    this.fetchDepartmentListService = new FetchDepartmentListService();\n    this.fetchCityListService = new FetchCityListService();\n    this.optionsRegionRef = React.createRef();\n    this.optionsDepartmentRef = React.createRef();\n    this.optionsCityRef = React.createRef();\n    this.state = {\n      formIsValid: false,\n      optionsRegion: [],\n      optionsDepartment: [],\n      optionsCity: [],\n      formControls: {\n        schoolName: {\n          value: '',\n          //valid: false,\n          //touched: false,\n          validationRules: {\n            minLength: 3\n          }\n        },\n        address: {\n          value: '',\n          validationRules: {\n            minLength: 3\n          }\n        },\n        zipCode: {\n          value: '',\n          validationRules: {\n            minLength: 5\n          }\n        },\n        description: {\n          value: '',\n          validationRules: {\n            minLength: 1\n          }\n        },\n        selectedRegion: {\n          value: '',\n          validationRules: {\n            minLength: 1\n          }\n        },\n        selectedDepartment: {\n          value: '',\n          validationRules: {\n            minLength: 1\n          }\n        },\n        selectedCity: {\n          value: '',\n          validationRules: {\n            minLength: 1\n          }\n        }\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.saveSchoolForm = this.saveSchoolForm.bind(this);\n  }\n\n  componentDidMount() {}\n\n  async fetchRegionList() {\n    this.fetchRegionListService.fetchRegionList().then(json => {\n      this.setState({\n        optionsRegion: json\n      });\n      this.optionsRegionRef.current.focusList();\n\n      if (this.state.formControls.selectedRegion.value) {\n        this.fetchDepartmentList(this.state.formControls.selectedRegion.value);\n      }\n    });\n  }\n\n  async fetchDepartmentList(regionCode) {\n    this.setState({\n      optionsDepartment: [],\n      optionsCity: []\n    });\n    this.fetchDepartmentListService.fetchDepartmentList(regionCode).then(json => {\n      this.setState({\n        optionsDepartment: json\n      });\n\n      if (this.state.formControls.selectedDepartment.value) {\n        this.fetchCityList(this.state.formControls.selectedDepartment.value);\n      } //console.log(this.state.formControls.selectedDepartment.value);\n\n    });\n  }\n\n  async fetchCityList(departmentCode) {\n    this.setState({\n      optionsCity: []\n    });\n    this.fetchCityListService.fetchCityList(departmentCode).then(json => {\n      this.setState({\n        optionsCity: json\n      }); //console.log(this.state.formControls.selectedCity.value);\n    });\n  }\n\n  async componentDidMount() {\n    this.fetchRegionList();\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const updatedControls = { ...this.state.formControls\n    };\n    const updatedFormElement = { ...updatedControls[name]\n    };\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n    updatedControls[name] = updatedFormElement;\n    let formIsValid = true;\n\n    for (let inputIdentifier in updatedControls) {\n      if (typeof updatedControls[inputIdentifier] != 'undefined') {\n        formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n      }\n    }\n\n    console.log(formIsValid); //console.log(name);\n\n    if (name == 'selectedRegion') {\n      updatedControls['selectedDepartment'].value = '';\n      updatedControls['selectedCity'].value = '';\n      this.fetchDepartmentList(value);\n    }\n\n    if (name == 'selectedDepartment') {\n      updatedControls['selectedCity'].value = '';\n      this.fetchCityList(value);\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      formIsValid: formIsValid\n    });\n  }\n\n  saveSchoolForm(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper wrapper-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ibox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ibox-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"School form\"))), React.createElement(\"div\", {\n      className: \"ibox-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(ListRegion, {\n      selectedRegion: this.state.formControls.selectedRegion.value,\n      handleInputChange: this.handleInputChange,\n      disabled: this.state.optionsRegion.length == 0,\n      ref: this.optionsRegionRef,\n      optionsRegion: this.state.optionsRegion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(ListDepartment, {\n      selectedDepartment: this.state.formControls.selectedDepartment.value,\n      handleInputChange: this.handleInputChange,\n      disabled: this.state.optionsDepartment.length == 0,\n      ref: this.optionsDepartmentRef,\n      optionsDepartment: this.state.optionsDepartment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(ListCity, {\n      selectedCity: this.state.formControls.selectedCity.value,\n      handleInputChange: this.handleInputChange,\n      disabled: this.state.optionsCity.length == 0,\n      ref: this.optionsCityRef,\n      optionsCity: this.state.optionsCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.formControls.schoolName.touched && !this.state.formControls.schoolName.valid ? \"form-group row has-error\" : \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Nom \\xE9cole\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"schoolName\",\n      value: this.state.formControls.schoolName.value,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Adresse\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"address\",\n      value: this.state.formControls.address.value,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Code postale\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"zipCode\",\n      value: this.state.formControls.zipCode.value,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"description\",\n      rows: \"3\",\n      placeholder: \"Enter a description ...\",\n      name: \"description\",\n      onChange: this.handleInputChange,\n      value: this.state.formControls.description.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"hr-line-dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12 col-sm-offset-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-e-margins\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-lg btn-white\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary\",\n      type: \"button\",\n      disabled: !this.state.formIsValid,\n      onClick: this.saveSchoolForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Save\"))))))))));\n  }\n\n}\n\nexport default SchoolForm;","map":{"version":3,"sources":["/Users/renard/education2020-react/src/views/bo/school/SchoolForm.jsx"],"names":["React","validate","APIConfig","FetchRegionListService","FetchDepartmentListService","FetchCityListService","ListRegion","ListDepartment","ListCity","SchoolForm","Component","constructor","props","formSubmitHandler","formData","formElementId","state","formControls","value","fetchRegionListService","fetchDepartmentListService","fetchCityListService","optionsRegionRef","createRef","optionsDepartmentRef","optionsCityRef","formIsValid","optionsRegion","optionsDepartment","optionsCity","schoolName","validationRules","minLength","address","zipCode","description","selectedRegion","selectedDepartment","selectedCity","handleInputChange","bind","saveSchoolForm","componentDidMount","fetchRegionList","then","json","setState","current","focusList","fetchDepartmentList","regionCode","fetchCityList","departmentCode","event","target","type","checked","name","updatedControls","updatedFormElement","touched","valid","inputIdentifier","console","log","e","preventDefault","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validate from '../../../common/validation/validate';\nimport * as APIConfig from '../../../config/APIConfig';\nimport FetchRegionListService from '../../../common/data/FetchRegionListService';\nimport FetchDepartmentListService from '../../../common/data/FetchDepartmentListService';\nimport FetchCityListService from '../../../common/data/FetchCityListService';\n\nimport ListRegion from './ListRegion';\nimport ListDepartment from './ListDepartment';\nimport ListCity from './ListCity';\n\nclass SchoolForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.fetchRegionListService = new FetchRegionListService();\n        this.fetchDepartmentListService = new FetchDepartmentListService();\n        this.fetchCityListService = new FetchCityListService();\n\n        this.optionsRegionRef = React.createRef();\n        this.optionsDepartmentRef = React.createRef();\n        this.optionsCityRef = React.createRef();\n\n        this.state = {\n            formIsValid: false,\n            optionsRegion: [\n            ],\n            optionsDepartment: [\n            ],\n            optionsCity: [\n            ],\n            formControls: {\n                schoolName:  {\n                    value: '',\n                    //valid: false,\n                    //touched: false,\n                    validationRules: {\n                       minLength: 3\n                    }\n                },\n                address: {\n                     value: '',\n                     validationRules: {\n                        minLength: 3\n                     }\n                 },\n                zipCode: {\n                     value: '',\n                     validationRules: {\n                         minLength: 5\n                     }\n                 },\n                description: {\n                     value: '',\n                       validationRules: {\n                          minLength: 1\n                       }\n                },\n                selectedRegion: {\n                     value: '',\n                     validationRules: {\n                        minLength: 1\n                     }\n                },\n                selectedDepartment: {\n                     value: '',\n                     validationRules: {\n                        minLength: 1\n                     }\n                },\n                selectedCity: {\n                     value: '',\n                     validationRules: {\n                        minLength: 1\n                     }\n                }\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.saveSchoolForm = this.saveSchoolForm.bind(this);\n      }\n\n      componentDidMount() {\n\n      }\n\n\n       async fetchRegionList() {\n            this.fetchRegionListService.fetchRegionList().then(json => {\n                      this.setState({\n                             optionsRegion: json\n                      });\n\n                      this.optionsRegionRef.current.focusList();\n\n                      if( this.state.formControls.selectedRegion.value ) {\n                        this.fetchDepartmentList(this.state.formControls.selectedRegion.value);\n                      }\n\n                }\n            );\n      }\n\n      async fetchDepartmentList(regionCode) {\n            this.setState({\n                 optionsDepartment: [],\n                 optionsCity: []\n            });\n            this.fetchDepartmentListService.fetchDepartmentList(regionCode).then(json => {\n                 this.setState({\n                        optionsDepartment: json\n                 });\n\n                 if( this.state.formControls.selectedDepartment.value ) {\n                     this.fetchCityList(this.state.formControls.selectedDepartment.value);\n                 }\n\n                 //console.log(this.state.formControls.selectedDepartment.value);\n               }\n           );\n      }\n\n      async fetchCityList(departmentCode) {\n              this.setState({\n                       optionsCity: []\n              });\n              this.fetchCityListService.fetchCityList(departmentCode).then(json => {\n                   this.setState({\n                          optionsCity: json\n                   });\n\n                   //console.log(this.state.formControls.selectedCity.value);\n                 }\n             );\n        }\n\n      async componentDidMount() {\n          this.fetchRegionList();\n      }\n\n\n      handleInputChange(event) {\n          const target = event.target;\n          const value = target.type === 'checkbox' ? target.checked : target.value;\n          const name = target.name;\n\n            const updatedControls = {\n            \t...this.state.formControls\n            };\n            const updatedFormElement = {\n                ...updatedControls[name]\n            };\n            updatedFormElement.value = value;\n            updatedFormElement.touched = true;\n            updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n            updatedControls[name] = updatedFormElement;\n\n            let formIsValid = true;\n            for (let inputIdentifier in updatedControls) {\n                if(typeof updatedControls[inputIdentifier] != 'undefined') {\n                    formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n                }\n            }\n\n            console.log(formIsValid);\n\n            //console.log(name);\n            if(name == 'selectedRegion') {\n                updatedControls['selectedDepartment'].value = '';\n                updatedControls['selectedCity'].value = '';\n                this.fetchDepartmentList(value);\n            }\n            if(name == 'selectedDepartment') {\n                updatedControls['selectedCity'].value = '';\n                this.fetchCityList(value);\n            }\n\n            this.setState({\n                formControls: updatedControls,\n                formIsValid: formIsValid\n            });\n        }\n\n    formSubmitHandler = () => {\n    \tconst formData = {};\n    \tfor (let formElementId in this.state.formControls) {\n    \t    formData[formElementId] = this.state.formControls[formElementId].value;\n    \t}\n    }\n\n\n    saveSchoolForm(e) {\n        e.preventDefault();\n    }\n\n\n    render() {\n            return (\n                <div className=\"wrapper wrapper-content\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"ibox\">\n                                <div className=\"ibox-title\">\n                                    <h5>School form</h5>\n                                </div>\n                            </div>\n                            <div className=\"ibox-content\">\n                                <form>\n                                    <ListRegion\n                                        selectedRegion={this.state.formControls.selectedRegion.value}\n                                        handleInputChange={this.handleInputChange}\n                                        disabled={this.state.optionsRegion.length == 0}\n                                        ref={this.optionsRegionRef}\n                                        optionsRegion={this.state.optionsRegion}\n                                       />\n\n                                    <ListDepartment\n                                        selectedDepartment={this.state.formControls.selectedDepartment.value}\n                                        handleInputChange={this.handleInputChange}\n                                        disabled={this.state.optionsDepartment.length == 0}\n                                        ref={this.optionsDepartmentRef}\n                                        optionsDepartment={this.state.optionsDepartment}\n                                       />\n\n\n\n                                    <ListCity\n                                        selectedCity={this.state.formControls.selectedCity.value}\n                                        handleInputChange={this.handleInputChange}\n                                        disabled={this.state.optionsCity.length == 0}\n                                        ref={this.optionsCityRef}\n                                        optionsCity={this.state.optionsCity}\n                                       />\n\n\n\n\n                                    <div className={this.state.formControls.schoolName.touched && !this.state.formControls.schoolName.valid ?  \"form-group row has-error\" : \"form-group row\" }>\n                                        <label className=\"col-sm-2 col-form-label\">Nom école</label>\n                                        <div className=\"col-sm-10\">\n                                        <input type=\"text\" className= 'form-control' name=\"schoolName\"\n                                        value={this.state.formControls.schoolName.value}\n                                         onChange={this.handleInputChange}\n                                         />\n                                        </div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group  row\"><label className=\"col-sm-2 col-form-label\">Adresse</label>\n                                        <div className=\"col-sm-10\"><input type=\"text\" className=\"form-control\" name=\"address\"\n                                        value={this.state.formControls.address.value}\n                                         onChange={this.handleInputChange} /></div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group  row\"><label className=\"col-sm-2 col-form-label\">Code postale</label>\n                                        <div className=\"col-sm-10\"><input type=\"text\" className=\"form-control\" name=\"zipCode\"\n                                         value={this.state.formControls.zipCode.value}\n                                         onChange={this.handleInputChange} /></div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group  row\"><label className=\"col-sm-2 col-form-label\">Description</label>\n                                        <div className=\"col-sm-10\">\n                                            <textarea className=\"form-control\" id=\"description\" rows=\"3\" placeholder=\"Enter a description ...\"\n                                            name=\"description\" onChange={this.handleInputChange}\n                                            value={this.state.formControls.description.value}\n                                            >\n\n                                            </textarea>\n                                        </div>\n                                    </div>\n                                    <div className=\"hr-line-dashed\"></div>\n\n                                    <div className=\"form-group row\">\n                                        <div className=\"col-sm-12 col-sm-offset-2\">\n                                            <div className=\"float-right\">\n                                                <div className=\"float-e-margins\">\n                                                    <button  className=\"btn btn-lg btn-white\" type=\"button\">Cancel</button>\n                                                    <button className=\"btn btn-lg btn-primary\" type=\"button\" disabled={!this.state.formIsValid} onClick={this.saveSchoolForm}>Save</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                         </div>\n                    </div>\n                </div>\n            )\n    }\n\n}\n\nexport default SchoolForm"]},"metadata":{},"sourceType":"module"}