{"ast":null,"code":"var cachePush = require('./cachePush'),\n    getNative = require('./getNative');\n/** Native method references. */\n\n\nvar Set = getNative(global, 'Set');\n/* Native method references for those with the same name as other `lodash` methods. */\n\nvar nativeCreate = getNative(Object, 'create');\n/**\n *\n * Creates a cache object to store unique values.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\n\nfunction SetCache(values) {\n  var length = values ? values.length : 0;\n  this.data = {\n    'hash': nativeCreate(null),\n    'set': new Set()\n  };\n\n  while (length--) {\n    this.push(values[length]);\n  }\n} // Add functions to the `Set` cache.\n\n\nSetCache.prototype.push = cachePush;\nmodule.exports = SetCache;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/SetCache.js"],"names":["cachePush","require","getNative","Set","global","nativeCreate","Object","SetCache","values","length","data","push","prototype","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CADvB;AAGA;;;AACA,IAAIE,GAAG,GAAGD,SAAS,CAACE,MAAD,EAAS,KAAT,CAAnB;AAEA;;AACA,IAAIC,YAAY,GAAGH,SAAS,CAACI,MAAD,EAAS,QAAT,CAA5B;AAEA;;;;;;;;AAOA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,MAAIC,MAAM,GAAGD,MAAM,GAAGA,MAAM,CAACC,MAAV,GAAmB,CAAtC;AAEA,OAAKC,IAAL,GAAY;AAAE,YAAQL,YAAY,CAAC,IAAD,CAAtB;AAA8B,WAAO,IAAIF,GAAJ;AAArC,GAAZ;;AACA,SAAOM,MAAM,EAAb,EAAiB;AACf,SAAKE,IAAL,CAAUH,MAAM,CAACC,MAAD,CAAhB;AACD;AACF,C,CAED;;;AACAF,QAAQ,CAACK,SAAT,CAAmBD,IAAnB,GAA0BX,SAA1B;AAEAa,MAAM,CAACC,OAAP,GAAiBP,QAAjB","sourcesContent":["var cachePush = require('./cachePush'),\n    getNative = require('./getNative');\n\n/** Native method references. */\nvar Set = getNative(global, 'Set');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n *\n * Creates a cache object to store unique values.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var length = values ? values.length : 0;\n\n  this.data = { 'hash': nativeCreate(null), 'set': new Set };\n  while (length--) {\n    this.push(values[length]);\n  }\n}\n\n// Add functions to the `Set` cache.\nSetCache.prototype.push = cachePush;\n\nmodule.exports = SetCache;\n"]},"metadata":{},"sourceType":"script"}