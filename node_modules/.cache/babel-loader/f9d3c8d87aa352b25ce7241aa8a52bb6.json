{"ast":null,"code":"/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return object != +object ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == other + '';\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/equalByTag.js"],"names":["boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","equalByTag","object","other","tag","name","message","module","exports"],"mappings":"AAAA;AACA,IAAIA,OAAO,GAAG,kBAAd;AAAA,IACIC,OAAO,GAAG,eADd;AAAA,IAEIC,QAAQ,GAAG,gBAFf;AAAA,IAGIC,SAAS,GAAG,iBAHhB;AAAA,IAIIC,SAAS,GAAG,iBAJhB;AAAA,IAKIC,SAAS,GAAG,iBALhB;AAOA;;;;;;;;;;;;;;AAaA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AACtC,UAAQA,GAAR;AACE,SAAKT,OAAL;AACA,SAAKC,OAAL;AACE;AACA;AACA,aAAO,CAACM,MAAD,IAAW,CAACC,KAAnB;;AAEF,SAAKN,QAAL;AACE,aAAOK,MAAM,CAACG,IAAP,IAAeF,KAAK,CAACE,IAArB,IAA6BH,MAAM,CAACI,OAAP,IAAkBH,KAAK,CAACG,OAA5D;;AAEF,SAAKR,SAAL;AACE;AACA,aAAQI,MAAM,IAAI,CAACA,MAAZ,GACHC,KAAK,IAAI,CAACA,KADP,GAEHD,MAAM,IAAI,CAACC,KAFf;;AAIF,SAAKJ,SAAL;AACA,SAAKC,SAAL;AACE;AACA;AACA,aAAOE,MAAM,IAAKC,KAAK,GAAG,EAA1B;AApBJ;;AAsBA,SAAO,KAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,UAAjB","sourcesContent":["/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n"]},"metadata":{},"sourceType":"script"}