{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _style = require('dom-helpers/style');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _class = require('dom-helpers/class');\n\nvar _class2 = _interopRequireDefault(_class);\n\nvar _scrollbarSize = require('dom-helpers/util/scrollbarSize');\n\nvar _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);\n\nvar _isOverflowing = require('./utils/isOverflowing');\n\nvar _isOverflowing2 = _interopRequireDefault(_isOverflowing);\n\nvar _manageAriaHidden = require('./utils/manageAriaHidden');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n  });\n  return idx;\n}\n\nfunction findContainer(data, modal) {\n  return findIndexOf(data, function (d) {\n    return d.modals.indexOf(modal) !== -1;\n  });\n}\n\nfunction setContainerStyle(state, container) {\n  var style = {\n    overflow: 'hidden'\n  }; // we are only interested in the actual `style` here\n  // becasue we will override it\n\n  state.style = {\n    overflow: container.style.overflow,\n    paddingRight: container.style.paddingRight\n  };\n\n  if (state.overflowing) {\n    // use computed style, here to get the real padding\n    // to add our scrollbar width\n    style.paddingRight = parseInt((0, _style2.default)(container, 'paddingRight') || 0, 10) + (0, _scrollbarSize2.default)() + 'px';\n  }\n\n  (0, _style2.default)(container, style);\n}\n\nfunction removeContainerStyle(_ref, container) {\n  var style = _ref.style;\n  Object.keys(style).forEach(function (key) {\n    return container.style[key] = style[key];\n  });\n}\n/**\n * Proper state managment for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager = function () {\n  function ModalManager() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$hideSiblingNode = _ref2.hideSiblingNodes,\n        hideSiblingNodes = _ref2$hideSiblingNode === undefined ? true : _ref2$hideSiblingNode,\n        _ref2$handleContainer = _ref2.handleContainerOverflow,\n        handleContainerOverflow = _ref2$handleContainer === undefined ? true : _ref2$handleContainer;\n\n    _classCallCheck(this, ModalManager);\n\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: 'add',\n    value: function add(modal, container, className) {\n      var modalIdx = this.modals.indexOf(modal);\n      var containerIdx = this.containers.indexOf(container);\n\n      if (modalIdx !== -1) {\n        return modalIdx;\n      }\n\n      modalIdx = this.modals.length;\n      this.modals.push(modal);\n\n      if (this.hideSiblingNodes) {\n        (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);\n      }\n\n      if (containerIdx !== -1) {\n        this.data[containerIdx].modals.push(modal);\n        return modalIdx;\n      }\n\n      var data = {\n        modals: [modal],\n        //right now only the first modal of a container will have its classes applied\n        classes: className ? className.split(/\\s+/) : [],\n        overflowing: (0, _isOverflowing2.default)(container)\n      };\n\n      if (this.handleContainerOverflow) {\n        setContainerStyle(data, container);\n      }\n\n      data.classes.forEach(_class2.default.addClass.bind(null, container));\n      this.containers.push(container);\n      this.data.push(data);\n      return modalIdx;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(modal) {\n      var modalIdx = this.modals.indexOf(modal);\n\n      if (modalIdx === -1) {\n        return;\n      }\n\n      var containerIdx = findContainer(this.data, modal);\n      var data = this.data[containerIdx];\n      var container = this.containers[containerIdx];\n      data.modals.splice(data.modals.indexOf(modal), 1);\n      this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n      // clean up the container\n\n      if (data.modals.length === 0) {\n        data.classes.forEach(_class2.default.removeClass.bind(null, container));\n\n        if (this.handleContainerOverflow) {\n          removeContainerStyle(data, container);\n        }\n\n        if (this.hideSiblingNodes) {\n          (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);\n        }\n\n        this.containers.splice(containerIdx, 1);\n        this.data.splice(containerIdx, 1);\n      } else if (this.hideSiblingNodes) {\n        //otherwise make sure the next top modal is visible to a SR\n        (0, _manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);\n      }\n    }\n  }, {\n    key: 'isTopModal',\n    value: function isTopModal(modal) {\n      return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexports.default = ModalManager;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/react-overlays/lib/ModalManager.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_style","require","_style2","_interopRequireDefault","_class","_class2","_scrollbarSize","_scrollbarSize2","_isOverflowing","_isOverflowing2","_manageAriaHidden","obj","__esModule","default","_classCallCheck","instance","TypeError","findIndexOf","arr","cb","idx","some","d","findContainer","data","modal","modals","indexOf","setContainerStyle","state","container","style","overflow","paddingRight","overflowing","parseInt","removeContainerStyle","_ref","keys","forEach","ModalManager","_ref2","arguments","undefined","_ref2$hideSiblingNode","hideSiblingNodes","_ref2$handleContainer","handleContainerOverflow","containers","add","className","modalIdx","containerIdx","push","hideSiblings","mountNode","classes","split","addClass","bind","remove","splice","removeClass","showSiblings","ariaHidden","isTopModal","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _style = require('dom-helpers/style');\n\nvar _style2 = _interopRequireDefault(_style);\n\nvar _class = require('dom-helpers/class');\n\nvar _class2 = _interopRequireDefault(_class);\n\nvar _scrollbarSize = require('dom-helpers/util/scrollbarSize');\n\nvar _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);\n\nvar _isOverflowing = require('./utils/isOverflowing');\n\nvar _isOverflowing2 = _interopRequireDefault(_isOverflowing);\n\nvar _manageAriaHidden = require('./utils/manageAriaHidden');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n  });\n  return idx;\n}\n\nfunction findContainer(data, modal) {\n  return findIndexOf(data, function (d) {\n    return d.modals.indexOf(modal) !== -1;\n  });\n}\n\nfunction setContainerStyle(state, container) {\n  var style = { overflow: 'hidden' };\n\n  // we are only interested in the actual `style` here\n  // becasue we will override it\n  state.style = {\n    overflow: container.style.overflow,\n    paddingRight: container.style.paddingRight\n  };\n\n  if (state.overflowing) {\n    // use computed style, here to get the real padding\n    // to add our scrollbar width\n    style.paddingRight = parseInt((0, _style2.default)(container, 'paddingRight') || 0, 10) + (0, _scrollbarSize2.default)() + 'px';\n  }\n\n  (0, _style2.default)(container, style);\n}\n\nfunction removeContainerStyle(_ref, container) {\n  var style = _ref.style;\n\n\n  Object.keys(style).forEach(function (key) {\n    return container.style[key] = style[key];\n  });\n}\n/**\n * Proper state managment for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\n\nvar ModalManager = function () {\n  function ModalManager() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$hideSiblingNode = _ref2.hideSiblingNodes,\n        hideSiblingNodes = _ref2$hideSiblingNode === undefined ? true : _ref2$hideSiblingNode,\n        _ref2$handleContainer = _ref2.handleContainerOverflow,\n        handleContainerOverflow = _ref2$handleContainer === undefined ? true : _ref2$handleContainer;\n\n    _classCallCheck(this, ModalManager);\n\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: 'add',\n    value: function add(modal, container, className) {\n      var modalIdx = this.modals.indexOf(modal);\n      var containerIdx = this.containers.indexOf(container);\n\n      if (modalIdx !== -1) {\n        return modalIdx;\n      }\n\n      modalIdx = this.modals.length;\n      this.modals.push(modal);\n\n      if (this.hideSiblingNodes) {\n        (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);\n      }\n\n      if (containerIdx !== -1) {\n        this.data[containerIdx].modals.push(modal);\n        return modalIdx;\n      }\n\n      var data = {\n        modals: [modal],\n        //right now only the first modal of a container will have its classes applied\n        classes: className ? className.split(/\\s+/) : [],\n\n        overflowing: (0, _isOverflowing2.default)(container)\n      };\n\n      if (this.handleContainerOverflow) {\n        setContainerStyle(data, container);\n      }\n\n      data.classes.forEach(_class2.default.addClass.bind(null, container));\n\n      this.containers.push(container);\n      this.data.push(data);\n\n      return modalIdx;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(modal) {\n      var modalIdx = this.modals.indexOf(modal);\n\n      if (modalIdx === -1) {\n        return;\n      }\n\n      var containerIdx = findContainer(this.data, modal);\n      var data = this.data[containerIdx];\n      var container = this.containers[containerIdx];\n\n      data.modals.splice(data.modals.indexOf(modal), 1);\n\n      this.modals.splice(modalIdx, 1);\n\n      // if that was the last modal in a container,\n      // clean up the container\n      if (data.modals.length === 0) {\n        data.classes.forEach(_class2.default.removeClass.bind(null, container));\n\n        if (this.handleContainerOverflow) {\n          removeContainerStyle(data, container);\n        }\n\n        if (this.hideSiblingNodes) {\n          (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);\n        }\n        this.containers.splice(containerIdx, 1);\n        this.data.splice(containerIdx, 1);\n      } else if (this.hideSiblingNodes) {\n        //otherwise make sure the next top modal is visible to a SR\n        (0, _manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);\n      }\n    }\n  }, {\n    key: 'isTopModal',\n    value: function isTopModal(modal) {\n      return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexports.default = ModalManager;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}