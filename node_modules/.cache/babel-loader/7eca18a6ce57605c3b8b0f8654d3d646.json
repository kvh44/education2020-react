{"ast":null,"code":"var keys = require('../object/keys');\n/** Used for native method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n\n  var skipCtor = isLoose;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined; // Recursively compare objects (susceptible to call stack limits).\n\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = equalObjects;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/equalObjects.js"],"names":["keys","require","objectProto","Object","prototype","hasOwnProperty","equalObjects","object","other","equalFunc","customizer","isLoose","stackA","stackB","objProps","objLength","length","othProps","othLength","index","key","call","skipCtor","objValue","othValue","result","undefined","objCtor","constructor","othCtor","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAAlB;AAEA;;;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,SAAzB;AAEA;;AACA,IAAIC,cAAc,GAAGH,WAAW,CAACG,cAAjC;AAEA;;;;;;;;;;;;;;;AAcA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,OAA5D,EAAqEC,MAArE,EAA6EC,MAA7E,EAAqF;AACnF,MAAIC,QAAQ,GAAGd,IAAI,CAACO,MAAD,CAAnB;AAAA,MACIQ,SAAS,GAAGD,QAAQ,CAACE,MADzB;AAAA,MAEIC,QAAQ,GAAGjB,IAAI,CAACQ,KAAD,CAFnB;AAAA,MAGIU,SAAS,GAAGD,QAAQ,CAACD,MAHzB;;AAKA,MAAID,SAAS,IAAIG,SAAb,IAA0B,CAACP,OAA/B,EAAwC;AACtC,WAAO,KAAP;AACD;;AACD,MAAIQ,KAAK,GAAGJ,SAAZ;;AACA,SAAOI,KAAK,EAAZ,EAAgB;AACd,QAAIC,GAAG,GAAGN,QAAQ,CAACK,KAAD,CAAlB;;AACA,QAAI,EAAER,OAAO,GAAGS,GAAG,IAAIZ,KAAV,GAAkBH,cAAc,CAACgB,IAAf,CAAoBb,KAApB,EAA2BY,GAA3B,CAA3B,CAAJ,EAAiE;AAC/D,aAAO,KAAP;AACD;AACF;;AACD,MAAIE,QAAQ,GAAGX,OAAf;;AACA,SAAO,EAAEQ,KAAF,GAAUJ,SAAjB,EAA4B;AAC1BK,IAAAA,GAAG,GAAGN,QAAQ,CAACK,KAAD,CAAd;AACA,QAAII,QAAQ,GAAGhB,MAAM,CAACa,GAAD,CAArB;AAAA,QACII,QAAQ,GAAGhB,KAAK,CAACY,GAAD,CADpB;AAAA,QAEIK,MAAM,GAAGf,UAAU,GAAGA,UAAU,CAACC,OAAO,GAAGa,QAAH,GAAcD,QAAtB,EAAgCZ,OAAO,GAAEY,QAAF,GAAaC,QAApD,EAA8DJ,GAA9D,CAAb,GAAkFM,SAFzG,CAF0B,CAM1B;;AACA,QAAI,EAAED,MAAM,KAAKC,SAAX,GAAuBjB,SAAS,CAACc,QAAD,EAAWC,QAAX,EAAqBd,UAArB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,MAAlD,CAAhC,GAA4FY,MAA9F,CAAJ,EAA2G;AACzG,aAAO,KAAP;AACD;;AACDH,IAAAA,QAAQ,KAAKA,QAAQ,GAAGF,GAAG,IAAI,aAAvB,CAAR;AACD;;AACD,MAAI,CAACE,QAAL,EAAe;AACb,QAAIK,OAAO,GAAGpB,MAAM,CAACqB,WAArB;AAAA,QACIC,OAAO,GAAGrB,KAAK,CAACoB,WADpB,CADa,CAIb;;AACA,QAAID,OAAO,IAAIE,OAAX,IACC,iBAAiBtB,MAAjB,IAA2B,iBAAiBC,KAD7C,IAEA,EAAE,OAAOmB,OAAP,IAAkB,UAAlB,IAAgCA,OAAO,YAAYA,OAAnD,IACA,OAAOE,OAAP,IAAkB,UADlB,IACgCA,OAAO,YAAYA,OADrD,CAFJ,EAGmE;AACjE,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBzB,YAAjB","sourcesContent":["var keys = require('../object/keys');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalObjects;\n"]},"metadata":{},"sourceType":"script"}