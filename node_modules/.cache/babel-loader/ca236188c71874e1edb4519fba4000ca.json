{"ast":null,"code":"var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar arrayTag = '[object Array]';\n/** Used for native method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objToString = objectProto.toString;\n/* Native method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsArray = getNative(Array, 'isArray');\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\n\nvar isArray = nativeIsArray || function (value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/lang/isArray.js"],"names":["getNative","require","isLength","isObjectLike","arrayTag","objectProto","Object","prototype","objToString","toString","nativeIsArray","Array","isArray","value","length","call","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAvB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,sBAAD,CADtB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAAC,0BAAD,CAF1B;AAIA;;;AACA,IAAIG,QAAQ,GAAG,gBAAf;AAEA;;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,SAAzB;AAEA;;;;;AAIA,IAAIC,WAAW,GAAGH,WAAW,CAACI,QAA9B;AAEA;;AACA,IAAIC,aAAa,GAAGV,SAAS,CAACW,KAAD,EAAQ,SAAR,CAA7B;AAEA;;;;;;;;;;;;;;;;;AAgBA,IAAIC,OAAO,GAAGF,aAAa,IAAI,UAASG,KAAT,EAAgB;AAC7C,SAAOV,YAAY,CAACU,KAAD,CAAZ,IAAuBX,QAAQ,CAACW,KAAK,CAACC,MAAP,CAA/B,IAAiDN,WAAW,CAACO,IAAZ,CAAiBF,KAAjB,KAA2BT,QAAnF;AACD,CAFD;;AAIAY,MAAM,CAACC,OAAP,GAAiBL,OAAjB","sourcesContent":["var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n"]},"metadata":{},"sourceType":"script"}