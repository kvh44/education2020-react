{"ast":null,"code":"var getLength = require('./getLength'),\n    isLength = require('./isLength'),\n    toObject = require('./toObject');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/createBaseEach.js"],"names":["getLength","require","isLength","toObject","createBaseEach","eachFunc","fromRight","collection","iteratee","length","index","iterable","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CADtB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAFtB;AAIA;;;;;;;;;;AAQA,SAASG,cAAT,CAAwBC,QAAxB,EAAkCC,SAAlC,EAA6C;AAC3C,SAAO,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACpC,QAAIC,MAAM,GAAGF,UAAU,GAAGP,SAAS,CAACO,UAAD,CAAZ,GAA2B,CAAlD;;AACA,QAAI,CAACL,QAAQ,CAACO,MAAD,CAAb,EAAuB;AACrB,aAAOJ,QAAQ,CAACE,UAAD,EAAaC,QAAb,CAAf;AACD;;AACD,QAAIE,KAAK,GAAGJ,SAAS,GAAGG,MAAH,GAAY,CAAC,CAAlC;AAAA,QACIE,QAAQ,GAAGR,QAAQ,CAACI,UAAD,CADvB;;AAGA,WAAQD,SAAS,GAAGI,KAAK,EAAR,GAAa,EAAEA,KAAF,GAAUD,MAAxC,EAAiD;AAC/C,UAAID,QAAQ,CAACG,QAAQ,CAACD,KAAD,CAAT,EAAkBA,KAAlB,EAAyBC,QAAzB,CAAR,KAA+C,KAAnD,EAA0D;AACxD;AACD;AACF;;AACD,WAAOJ,UAAP;AACD,GAdD;AAeD;;AAEDK,MAAM,CAACC,OAAP,GAAiBT,cAAjB","sourcesContent":["var getLength = require('./getLength'),\n    isLength = require('./isLength'),\n    toObject = require('./toObject');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n"]},"metadata":{},"sourceType":"script"}