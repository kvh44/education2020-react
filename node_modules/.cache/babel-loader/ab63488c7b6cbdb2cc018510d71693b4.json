{"ast":null,"code":"var baseMatches = require('./baseMatches'),\n    baseMatchesProperty = require('./baseMatchesProperty'),\n    bindCallback = require('./bindCallback'),\n    identity = require('../utility/identity'),\n    property = require('../utility/property');\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\n\n\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n\n  if (type == 'function') {\n    return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);\n  }\n\n  if (func == null) {\n    return identity;\n  }\n\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n\n  return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);\n}\n\nmodule.exports = baseCallback;","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/lodash-compat/internal/baseCallback.js"],"names":["baseMatches","require","baseMatchesProperty","bindCallback","identity","property","baseCallback","func","thisArg","argCount","type","undefined","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAAA,IACIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CADjC;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAF1B;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,qBAAD,CAHtB;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAAC,qBAAD,CAJtB;AAMA;;;;;;;;;;;;AAUA,SAASK,YAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,QAArC,EAA+C;AAC7C,MAAIC,IAAI,GAAG,OAAOH,IAAlB;;AACA,MAAIG,IAAI,IAAI,UAAZ,EAAwB;AACtB,WAAOF,OAAO,KAAKG,SAAZ,GACHJ,IADG,GAEHJ,YAAY,CAACI,IAAD,EAAOC,OAAP,EAAgBC,QAAhB,CAFhB;AAGD;;AACD,MAAIF,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAOH,QAAP;AACD;;AACD,MAAIM,IAAI,IAAI,QAAZ,EAAsB;AACpB,WAAOV,WAAW,CAACO,IAAD,CAAlB;AACD;;AACD,SAAOC,OAAO,KAAKG,SAAZ,GACHN,QAAQ,CAACE,IAAD,CADL,GAEHL,mBAAmB,CAACK,IAAD,EAAOC,OAAP,CAFvB;AAGD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,YAAjB","sourcesContent":["var baseMatches = require('./baseMatches'),\n    baseMatchesProperty = require('./baseMatchesProperty'),\n    bindCallback = require('./bindCallback'),\n    identity = require('../utility/identity'),\n    property = require('../utility/property');\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\nmodule.exports = baseCallback;\n"]},"metadata":{},"sourceType":"script"}