{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _componentOrElement = require('react-prop-types/lib/componentOrElement');\n\nvar _componentOrElement2 = _interopRequireDefault(_componentOrElement);\n\nvar _ownerDocument = require('./utils/ownerDocument');\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _getContainer = require('./utils/getContainer');\n\nvar _getContainer2 = _interopRequireDefault(_getContainer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The `<Portal/>` component renders its children into a new \"subtree\" outside of current component hierarchy.\n * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.\n * The children of `<Portal/>` component will be appended to the `container` specified.\n */\n\n\nvar Portal = _react2.default.createClass({\n  displayName: 'Portal',\n  propTypes: {\n    /**\n     * A Node, Component instance, or function that returns either. The `container` will have the Portal children\n     * appended to it.\n     */\n    container: _react2.default.PropTypes.oneOfType([_componentOrElement2.default, _react2.default.PropTypes.func])\n  },\n  componentDidMount: function componentDidMount() {\n    this._renderOverlay();\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    this._renderOverlay();\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this._overlayTarget && nextProps.container !== this.props.container) {\n      this._portalContainerNode.removeChild(this._overlayTarget);\n\n      this._portalContainerNode = (0, _getContainer2.default)(nextProps.container, (0, _ownerDocument2.default)(this).body);\n\n      this._portalContainerNode.appendChild(this._overlayTarget);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this._unrenderOverlay();\n\n    this._unmountOverlayTarget();\n  },\n  _mountOverlayTarget: function _mountOverlayTarget() {\n    if (!this._overlayTarget) {\n      this._overlayTarget = document.createElement('div');\n      this._portalContainerNode = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);\n\n      this._portalContainerNode.appendChild(this._overlayTarget);\n    }\n  },\n  _unmountOverlayTarget: function _unmountOverlayTarget() {\n    if (this._overlayTarget) {\n      this._portalContainerNode.removeChild(this._overlayTarget);\n\n      this._overlayTarget = null;\n    }\n\n    this._portalContainerNode = null;\n  },\n  _renderOverlay: function _renderOverlay() {\n    var overlay = !this.props.children ? null : _react2.default.Children.only(this.props.children); // Save reference for future access.\n\n    if (overlay !== null) {\n      this._mountOverlayTarget();\n\n      this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, overlay, this._overlayTarget);\n    } else {\n      // Unrender if the component is null for transitions to null\n      this._unrenderOverlay();\n\n      this._unmountOverlayTarget();\n    }\n  },\n  _unrenderOverlay: function _unrenderOverlay() {\n    if (this._overlayTarget) {\n      _reactDom2.default.unmountComponentAtNode(this._overlayTarget);\n\n      this._overlayInstance = null;\n    }\n  },\n  render: function render() {\n    return null;\n  },\n  getMountNode: function getMountNode() {\n    return this._overlayTarget;\n  },\n  getOverlayDOMNode: function getOverlayDOMNode() {\n    if (!this.isMounted()) {\n      throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');\n    }\n\n    if (this._overlayInstance) {\n      return _reactDom2.default.findDOMNode(this._overlayInstance);\n    }\n\n    return null;\n  }\n});\n\nexports.default = Portal;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/renard/education2020-react/node_modules/react-overlays/lib/Portal.js"],"names":["Object","defineProperty","exports","value","_react","require","_react2","_interopRequireDefault","_reactDom","_reactDom2","_componentOrElement","_componentOrElement2","_ownerDocument","_ownerDocument2","_getContainer","_getContainer2","obj","__esModule","default","Portal","createClass","displayName","propTypes","container","PropTypes","oneOfType","func","componentDidMount","_renderOverlay","componentDidUpdate","componentWillReceiveProps","nextProps","_overlayTarget","props","_portalContainerNode","removeChild","body","appendChild","componentWillUnmount","_unrenderOverlay","_unmountOverlayTarget","_mountOverlayTarget","document","createElement","overlay","children","Children","only","_overlayInstance","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","render","getMountNode","getOverlayDOMNode","isMounted","Error","findDOMNode","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _componentOrElement = require('react-prop-types/lib/componentOrElement');\n\nvar _componentOrElement2 = _interopRequireDefault(_componentOrElement);\n\nvar _ownerDocument = require('./utils/ownerDocument');\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _getContainer = require('./utils/getContainer');\n\nvar _getContainer2 = _interopRequireDefault(_getContainer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The `<Portal/>` component renders its children into a new \"subtree\" outside of current component hierarchy.\n * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.\n * The children of `<Portal/>` component will be appended to the `container` specified.\n */\nvar Portal = _react2.default.createClass({\n\n  displayName: 'Portal',\n\n  propTypes: {\n    /**\n     * A Node, Component instance, or function that returns either. The `container` will have the Portal children\n     * appended to it.\n     */\n    container: _react2.default.PropTypes.oneOfType([_componentOrElement2.default, _react2.default.PropTypes.func])\n  },\n\n  componentDidMount: function componentDidMount() {\n    this._renderOverlay();\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    this._renderOverlay();\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this._overlayTarget && nextProps.container !== this.props.container) {\n      this._portalContainerNode.removeChild(this._overlayTarget);\n      this._portalContainerNode = (0, _getContainer2.default)(nextProps.container, (0, _ownerDocument2.default)(this).body);\n      this._portalContainerNode.appendChild(this._overlayTarget);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this._unrenderOverlay();\n    this._unmountOverlayTarget();\n  },\n  _mountOverlayTarget: function _mountOverlayTarget() {\n    if (!this._overlayTarget) {\n      this._overlayTarget = document.createElement('div');\n      this._portalContainerNode = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);\n      this._portalContainerNode.appendChild(this._overlayTarget);\n    }\n  },\n  _unmountOverlayTarget: function _unmountOverlayTarget() {\n    if (this._overlayTarget) {\n      this._portalContainerNode.removeChild(this._overlayTarget);\n      this._overlayTarget = null;\n    }\n    this._portalContainerNode = null;\n  },\n  _renderOverlay: function _renderOverlay() {\n\n    var overlay = !this.props.children ? null : _react2.default.Children.only(this.props.children);\n\n    // Save reference for future access.\n    if (overlay !== null) {\n      this._mountOverlayTarget();\n      this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, overlay, this._overlayTarget);\n    } else {\n      // Unrender if the component is null for transitions to null\n      this._unrenderOverlay();\n      this._unmountOverlayTarget();\n    }\n  },\n  _unrenderOverlay: function _unrenderOverlay() {\n    if (this._overlayTarget) {\n      _reactDom2.default.unmountComponentAtNode(this._overlayTarget);\n      this._overlayInstance = null;\n    }\n  },\n  render: function render() {\n    return null;\n  },\n  getMountNode: function getMountNode() {\n    return this._overlayTarget;\n  },\n  getOverlayDOMNode: function getOverlayDOMNode() {\n    if (!this.isMounted()) {\n      throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');\n    }\n\n    if (this._overlayInstance) {\n      return _reactDom2.default.findDOMNode(this._overlayInstance);\n    }\n\n    return null;\n  }\n});\n\nexports.default = Portal;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}